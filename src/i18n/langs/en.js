import enLocale from 'element-ui/lib/locale/lang/en'
const en = {
  common: {
    speed: "Speed",
    playSpeed: "Speed",
    load: "Load",
    playAndPause: "Play/Pause",
    chart: "Chart",
    downloadTrack: "Download track",
    yes: "Yes",
    no: "No",
    disable: "Disable",
    selectRole: "Please select a role.",
    pwdEmpty: "Password is required.",
    accountEmpty: "Account is required.",
    track: "Track",
    client: "Client",
    registerSuccess: "Registration success.",
    incorrectPwd: "Please enter the password.",
    incorrectPhone: "Please enter the correct phone number.",
    incorrectEmail: "Please enter the correct email address.",
    incorrectAccount: "Incorrect account.",
    enterAccount: "Please enter your account.",
    enterPwdAgain: "Please enter password again.",
    pwdLengthErr: "Password cannot be less than 5 digits.",
    lastWeek: "Last Week",
    lastMonth: "Last Month",
    last3Month: "Last 3 Months",
    systemName: 'GPS Tracking System',
    ok: 'OK',
    cancel: 'Cancel',
    create: 'Create',
    edit: 'Edit',
    delete: 'Delete',
    clean: 'Clean',
    device: 'Device',
    type: 'Type',
    deviceType: 'Type',
    deviceImei: 'IMEI',
    deviceName: 'Name',
    deviceSim: 'SIM',
    time: 'Time',
    personal: 'Personal',
    enterprise: 'Enterprise',
    administrators: 'Admin',
    demo: "Demo",
    root: 'Root',
    message: 'Message',
    geofence: 'Geofence',
    name: 'Name',
    width: 'Width',
    height: 'Height',
    visible: 'Visible',
    property: 'Property',
    updatePass: 'Update password',
    query: 'Query',
    deleteAll: "Delete All",
    deleteSelected: "Delete Selected",
    readAll: "All Read",
    customMsg: "Custom Message",
    page: "Page"
  },
  setting: {
    all: "All",
    bubble: "Bubble",
    alarm: "Alarm",
    fenceEnter: "Fence Enter",
    fenceLeave: "Fence Leave",
    online: "Online",
    offline: "Offline",
    weakSignal: "Weak Signal",
    accept: "Acceptence",
    voice: "Voice",
    tempUnit: "Temperature Unit",
    speedUnit: "Speed Unit",
    emailAlert: "Email Alert"
  },
  report: {
    allDevices: "All Devices",
    display: "Display",
    cancel: "Cancel",
    confirm: "Confirm",
    download: "Download",
    alarmSetting: "Alarm Setting",
    interval: "Interval (min)",
    timeRange: "Time Range",

    temp1: "Temperature 1",
    temp2: "Temperature 2",
    temp3: "Temperature 3",
    temp4: "Temperature 4",
    humid1: "Humidity 1",
    humid2: "Humidity 2",
    humid3: "Humidity 3",
    humid4: "Humidity 4",
    temper: "Temperature",
    humidity: "Humidity",
    speed: "Speed",
    cooler: "Cooler",
    fuel: "Fuel",
    batteryV: "Battery Voltage",
    batteryL: "Battery Level",
    door: "Access",
    vibrate: "Parking",
    power: "Power",

    coolerAlarm: "Cooler Alarm",
    fuelAlarm: "Fuel Quantity",
    batteryVAlarm: "Low Battery Voltage",
    batteryLAlarm: "Low Battery Level",
    doorAlarm: "Access",
    speedAlarm: "Speed",
    vibrateAlarm: "Parking Record",
    powerAlarm: "Power",

    statistics: " Statistics",
    temperSensorSN: "Temperature Sensor SN",

    selectDevice: "Select Vehicle",
    timeSelect: "Select Time",
    paramType: "Parameter Type",
    parkRecord: "Park Record",


    devNumber: "Device Number",
    devVIN: "Device VIN",
    containerType: "Container Type",
    refrigModel: "Fridge Model",
    refrigSN: "Fridge SN",
    startTime: "Start Time",
    endTime: "End Time",
    to: "To",

    temperMonitor: "Monitor",
    report: "Report",

    number: "No",
    time: "Time",
    date: "Date",
    coolerState: "Cooler State",
    doorState: "Door State",
    expected: "Expected",
    temperUnit: "Temperature Unit",

    tempSensor1: "Sensor 1",
    tempSensor2: "Sensor 2",
    tempSensor3: "Sensor 3",
    tempSensor4: "Sensor 4",

    section1: "Section 1",
    section2: "Section 2",
    section3: "Section 3",
    section4: "Section 4",

    coolerOpsReport: "Cooler Operation Report",
    fuelQuantityReport: "Fuel Quantitiy Report",
    tempHumidReport: "Temperature and Humidity Report",
    accessReport: "Access Report",
    batteryVReport: "Battery Voltage Report",
    batteryLReport: "Battery Level Report",
    powerReport: "Power Report",
    speedReport: "Speed Report",
    vibrateReport: "Parking Report"
  },
  login: {
    register: 'Register',
    login: 'Login'
  },
  register: {
    userRegister: 'User Register',
    account: 'Account',
    email: 'Email',
    mobile: 'Mobile',
    password: 'Password',
    password2: 'Confirm Password',
    supUser: "Superior",
    role: "Role"
  },
  map: {
    menuOperDevInfo: "Device Information",
    sendCommand: "Commend Send",
    commandRecord: "Command Record",
    bindDesc: "If the device is already bound to this fence, the device does not need to be bound.",
    bind: "Bind",
    unbind: "Unbind",
    groupBindTitle: "Bind all devices in this group to fence",
    groupBindFence: "Group bind fence",
    bindFence: "Bind fence",
    bindSuccess: "Bind Success",
    unbindSuccess: "Unbind Success",
    fenceDeleteSuccess: "Fence deleted successfully",
    fenceCreateSuccess: "Fence created successfully",
    selectFence: "Please select fence first",
    noTrack: "No track",
    invalidLocation: "Invalid Location",
    inactive: "Inactive",
    searchDevice: "Please enter device name",
    selectAlert: "Please select device first",
    address: "Address",
    parkDuration: "Duration",
    mileageStatistics: "Mileage",
    parkingStatistics: "Parking",
    media: "Media",
    menuDeviceList: 'Device List',
    menuDeviceAdd: 'Create Device',
    menuDeviceEdit: 'Edit Device',
    menuOperation: 'Oper',
    menuOperHistory: 'Historical Track',
    menuOperGeofence: 'Geofence',
    menuOperStatistics: 'Statistics',
    menuOperCommand: 'Command',
    menuOperMedia: 'Media',
    toolBubble: 'Bubble',
    toolTrack: 'Track',
    toolMeasure: 'Measure',
    toolMeasureDistance: 'Distance',
    toolMeasureArea: 'Area',
    toolMap: 'Map',
    toolLayer: 'Layer',
    toolPoi: 'POI',
    toolFence: 'GeoFence',
    toolMessage: 'Message',
    toolFullScreen: 'FullScreen',
    toolExitFullScreen: 'ExitFullScreen',
    userDeviceStatistics: 'DeviceStatistics',
    userGroupManage: 'GroupManage',
    userUpdatePass: 'UpdatePass',
    userUserManual: 'UserManual',
    userExitSystem: 'ExitSystem',
    userConfig: 'Configure',
    userConfigLanguage: 'Language',
    popupStatus: 'Status',
    popupMileage: 'Mileage',
    popupStop: 'Stop',
    popupSecond: 'Second',
    popupMinute: 'Minute',
    popupHour: 'Hour',
    popupDay: 'Day',
    popupMonth: 'Month',
    popupYear: 'Year',
    popupSecond: 'Second',
    popupNorth: 'N',
    popupNorthEast: 'NE',
    popupEast: 'E',
    popupSouthEast: 'SE',
    popupSouth: 'S',
    popupSouthWest: 'SW',
    popupWest: 'W',
    popupNorthWest: 'NW',
    eventOffline: 'Offline',
    eventOnline: 'Online',
    eventFenceEnter: 'FenceEnter',
    eventFenceExit: 'FenceExit',
    eventOverSpeed: 'OverSpeed',
    eventAlarm: 'Alarm',

    eventTemp1: 'Temperature 1: value℃',
    eventTemp2: 'Temperature 2: value℃',
    eventTemp3: 'Temperature 3: value℃',
    eventTemp4: 'Temperature 4: value℃',
    eventHumid1: 'Humidity 1: value%',
    eventHumid2: 'Humidity 2: value%',
    eventHumid3: 'Humidity 3: value%',
    eventHumid4: 'Humidity 4: value%',
    eventCoolerOff: 'Cooler Off',
    eventFuelOut: 'Fuel: value%',
    eventBatteryVoltage: 'Battery Voltage: valueV',
    eventDoorOpen: 'Door opened',
    eventVibration: 'Access Alarm',
    eventBatteryOut: 'Battery: value%',
    eventPowerOff: 'Power Off',

    geofence: {
      circle: 'Circle',
      polygon: 'Polygon',
      lineString: 'LineString',
      district: 'District'
    },
    user: {
      group: {
        title: 'Group management',
        tips: 'Drag to any group',
        createMainGroup: 'Create main group'
      },
      deviceStatistics: {
        title: 'Device stat',
        selectTime: 'Select datetime',
        selectDevices: 'Select devices'
      }
    },
    tools: {
      poi: {
        point: 'Point',
        line: 'Line',
        circle: 'Circle',
        polygon: 'Polygon',
        marker: 'Marker'
      }
    }
  },

  tips: {
    tips: 'Tips',
    signOut: 'Confirm exit system?'
  },
  system: {
    manual: "Manual",
    apiDoc: "API Document",
    devDoc: "Development Document",
    home: "Home",
    monitor: "Monitor",
    changePwd: "Change Password",
    signOut: "Sign Out",
    totalUser: "Total User",
    totalDevice: "Total Device",
    unreadAlarm: "Unread/Events",
    nFences: "Number of Fences",
    weekDays: "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday",
    currentState: "Current State",
    devStatistics: "Device Statistics",

    status: "Status",
    filterBy: "Filter by",
    keyword: "Keyword",
    query: "Query",
    createUser: "Add User",
    editUser: "Edit User",
    no: "No",
    account: "Account",
    email: "Email",
    phone: "Phone",
    role: "Role",
    timeRegister: "Time Registerd",
    disable: "Disabled",
    operations: "Operations",
    edit: "Edit",
    delete: "Delete",

    timeAdded: "Time Added",
    addDevice: "Add Device",
    editDevice: "Edit Device",
    lastTimeUpdated: "Last Time Updated",
    totalMileage: "Day/Total Mileage(km)",

    addPermission: "Add Permission",
    editPermission: "Edit Permission",
    permisDesc: "At least one button type node must be created under the menu type.",
    userRights: "User Rights",
    sort: "Sort",
    adminAuth: "Admin Authority",
    menu: "Menu",
    button: "Button",
    permisCode: "Code",
    name: "Name",
    component: "Component",
    path: "Path",
    icon: "Icon",
    nameRequire: "Name is required.",
    topMenu: "Top Menu",
    parentMenu: "Parent Menu",

    addRole: "Add Role",
    editRole: "Edit Role",
    roleName: "Name",
    roleCode: "Code",
    group: "Group",
    userRole: "User Role",
    mgmtRole: "Management Role",
    roleCodeEmpty: "Role Code is required.",
    rights: "Rights",

    addType: "Add Type",
    editType: "Edit Type",
    port: "Port",
    desc: "Description",
    portEmpty: "Port is required.",
    enterDesc: "Please enter description.",
    portNumeric: "Port must be a numeric value.",

    cacheType: "Cache Type",
    cleanUp: "Clean Up",
    userToken: "User Token",
    rolePermis: "Role Permission",
    cleanSuccess: "Clean up successfully.",

    registerEnable: "Enable Register",
    mapEnable: "Enable Map",
    confSuccess: "Configured successfully.",

    terminal: "Terminal",
    action: "Action",
    param: "Request",
    response: "Response",
    result: "Result",
    success: "Success",
    fail: "Failure",

    deviceType: "Device Type",

    brand: "Brand",
    icon: "Icon",
    client: "Client",
    devPwd: "Device Password",
    fuelVol: "Fuel Volume",
    refrigModel: "Fridge Model",
    refrigSN: "Fridge SN",
    devNumber: "Device Number",
    devVIN: "VIN",
    containerNumber: "Container Number",
    containerType: "Container Type",
    doorType: "Door Type",
    temp1SN: "Temperature 1 SN",
    temp2SN: "Temperature 2 SN",
    temp3SN: "Temperature 3 SN",
    temp4SN: "Temperature 4 SN",
    timeCreated: "Time Created",
    deleteMsg: "Are you sure you want to delete?",
    deleteSuccess: "Deleted Successfully",
    deviceInfo: "Device Information",

    disconnected: "Disconnected",
    tryConnect: "Trying to connect",
    reconnected: "Reconnected",

  },
  ...enLocale
}
export default en
